name: Android Release Build

on:
  push:
    branches:
      - main  # Запускать при пуше в ветку main
  pull_request:

jobs:
  build:
    name: Build Android Release APK
    runs-on: ubuntu-latest

    steps:
      # Получаем код репозитория
      - name: Checkout code
        uses: actions/checkout@v2

      # Устанавливаем JDK 17 (обновите версию, если необходимо)
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      # Кэшируем зависимости Gradle для ускорения последующих сборок
      - name: Cache Gradle files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}

      # Собираем релизную APK
      - name: Build Release APK
        run: ./gradlew assembleRelease

      # Создаем новый релиз на GitHub
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}  # Тег релиза
          release_name: "Release ${{ github.run_number }}"
          body: "Автоматически созданный релиз"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Загружаем APK в релиз
      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk  # Убедитесь, что путь к файлу APK верный
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
